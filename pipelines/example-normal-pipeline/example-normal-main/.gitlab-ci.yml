# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages in the pipeline, executed in the order they appear
  - build
  - test
  - deploy

# -------------------------------------------------------------------------------------
# 1) BUILD STAGE (Code compilation, preprocessing, or other setup tasks)
# -------------------------------------------------------------------------------------
build-job:
  stage: build                   # Associates this job with the 'build' stage
  script:
    - echo "Compiling the code..."
    - echo "Compilation complete."

# -------------------------------------------------------------------------------------
# 2) TEST STAGE (Code validation; unit tests, integration tests, static analysis, etc.)
# -------------------------------------------------------------------------------------
unit-test-job:
  stage: test                    # Runs after the 'build' stage has completed successfully
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60                   # Simulating the duration of tests
    - echo "Code coverage is 90%."

lint-test-job:
  stage: test                    # Runs in parallel with 'unit-test-job' because it's also in the 'test' stage
  script:
    - echo "Linting the code... This will take about 10 seconds."
    - sleep 10                   # Simulating the duration of lint checks
    - echo "No lint issues found."

# -------------------------------------------------------------------------------------
# 3) DEPLOY STAGE (Publishing or delivering the application to an environment)
# -------------------------------------------------------------------------------------
deploy-job:
  stage: deploy                  # Only runs if all jobs in the 'test' stage have completed successfully
  script:
    - echo "Deploying the application..."
    - echo "Application successfully deployed."